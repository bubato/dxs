@mixin contentBorder($borderColor: #c6c6c6) {
  .siteEditPage & {
    position: relative;
    &:before {
      content: '';
      background-image: linear-gradient(
          to right,
          $borderColor,
          $borderColor 5px,
          transparent 5px,
          transparent 9px
        ),
        linear-gradient(
          to right,
          $borderColor,
          $borderColor 5px,
          transparent 5px,
          transparent 9px
        ),
        linear-gradient(
          to bottom,
          $borderColor,
          $borderColor 5px,
          transparent 5px,
          transparent 9px
        ),
        linear-gradient(
          to bottom,
          $borderColor,
          $borderColor 5px,
          transparent 5px,
          transparent 9px
        );
      background-size: 9px 1px, 9px 1px, 1px 9px, 1px 9px;
      background-position: left top, left bottom, left top, right top;
      background-repeat: repeat-x, repeat-x, repeat-y, repeat-y;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      pointer-events: none;
    }
    &.hover:before {
      display: none;
    }
  }
}
.view-area {
  height: auto;
  position: relative;
  background: #f8f8fa;
  width: 100%;
}

.view-area>.layout-container > ul.view-components {
  min-width: 864px;
}
.layout-container>.view-components .layout-container .single-component .single_component_content {
    padding: 10px;
}
ul.view-components {
  padding: 10px;

  li.component {
    position: relative;
    margin-top: 10px;
    min-height: 50px;
    &.clone {
      width: 100%;
      height: 12px;
      background: #d6eaff;
      @include contentBorder(#007aff);
    }
    &:not(:last-child) {
      margin-bottom: 32px;
    }
    &.set-component {
      width: 100%;
      background: #ffffff;
      border:#fff 1px solid;
      @include contentBorder();
      &.hover {
        border: 1px solid #007aff;
        box-shadow: 0 0 4px rgba(0, 122, 255, 0.72);
      }
    }

    &.layout-component {
      .layout-column-area {
        display: flex;
        .layout-column {
          margin: 0 auto;
          border: 1px dashed;
          min-height: 40px;
          padding: 10px 0;
          background: #ffffff;
          &.layout-25 {
            width: calc(100% / 4);
          }
          &.layout-33 {
            width: calc(100% / 3);
          }
          &.layout-50 {
            width: 50%;
          }
          &.layout-66 {
            width: calc(100% / 3 * 2);
          }
          &:not(:last-child) {
            margin-right: 0px;
          }
        }
        &.hover {
          .layout-column {
            border: 1px solid #007aff;
            box-shadow: 0 0 4px rgba(0, 122, 255, 0.72);
          }
        }
      }
    }
    &.single-component {
      @include contentBorder();
      background: #ffffff;
      // .single_component_content {
      //   padding: 10px;
      // }
      table.single-component-table {
        border: 1px solid;
        th,
        td {
          padding: 10px;
          border: 1px solid;
        }
      }
      &.hover {
        border: 1px solid #007aff;
        box-shadow: 0 0 4px rgba(0, 122, 255, 0.72);
      }
    }
    &.form-component {
      @include contentBorder();
      .form_component_content{
        background: #ffffff;
      }
      .single_component_content {
        padding: 10px;
      }
      table.single-component-table {
        border: 1px solid;
        th,
        td {
          padding: 10px;
          border: 1px solid;
        }
      }
      &.hover {
        border: 1px solid #007aff;
        box-shadow: 0 0 4px rgba(0, 122, 255, 0.72);
      }
    }

    .component-name {
      display: flex;
      align-items: center;
      justify-content: center;
      position: absolute;
      top: 0;
      left: 0;
      z-index: 10;
      min-width: 120px;
      height: 28px;
      padding: 0 10px;
      color: #ffffff;
      font-size: 12px;
      background: #6c707e;
    }
    .buttons {
      display: flex;
      button {
        &:not(:last-child) {
          margin-right: 10px;
        }
      }
    }
  }
  .menu_buttons {
    overflow: hidden;
    position: absolute;
    top: 4px;
    right: 7px;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 100;
    border: 1px solid #e5e5e5;
    border-radius: 4px;
    button {
      overflow: hidden;
      background: #ffffff;
      display: flex;
      justify-content: center;
      cursor: pointer;
      position: relative;
      fill: #3a435c;
      padding: 4px;
      &:not(:last-child):before {
        position: absolute;
        top: 0;
        right: 0;
        height: 100%;
        content: '';
        width: 1px;
        background-color: #ffffff;
      }
      &:not(:last-child):after {
        position: absolute;
        top: 1px;
        right: 0;
        height: calc(100% - 2px);
        content: '';
        width: 1px;
        background-color: #e5e5e5;
      }
      // &:not(:last-child) {
      //   border-right: 1px solid #e5e5e5;
      // }
      &.btn-disabled {
        background: #cdced0;
        fill: #b0b3be;
      }
    }
  }
}
.single_component_content {
  // max-width: 1000px;
  margin: auto;
}
.layout-column-area {
  // max-width: 1000px;
  margin: auto;
}

/*エディター用レイアウト調整*/
.siteEditPage {
  $edit-layout-padding: 72px; // 32+40
  $openEditerW: 525px;
  $closeEditerW: 43px;
  ul.view-components
    li.component.layout-component
    .layout-column-area
    .layout-column {
    padding-right: 0;
  }
  .view-area>.layout-container > .view-components {
    padding: 32px;
    .component {
      margin-top: 0px;
    }
  }
  //シングルパーツ単体、セットパーツ
  .set-component [class^='view-']:not(.view-header),
  .view-area>.layout-container > .view-components > .single-component > .single_component_content,
  .view-area >.layout-container> .view-components > .layout-component {
    padding-top: 20px;
    padding-bottom: 20px;
    margin: 0 auto;
    box-shadow: none;
    padding-left: calc(
      (100vw - #{$closeEditerW} - #{$edit-layout-padding}) / 12
    );
    padding-right: calc(
      (100vw - #{$closeEditerW} - #{$edit-layout-padding}) / 12
    );
  }
  .view-area>.layout-container > .view-components > .layout-component {
    @include contentBorder();
    margin-bottom: 32px;
    background: #fff;
  }

  .view-mainArea.background .parts-contents {
    padding-left: calc(
      (100vw - (#{$closeEditerW} + #{$edit-layout-padding})) / 12
    );
    padding-right: calc(
      (100vw - (#{$closeEditerW} + #{$edit-layout-padding})) / 12
    );
  }
  .view-textWithTopImages .contents {
    margin: 0;
  }
  .open {
    .set-component [class^='view-']:not(.view-header),
    .view-area>.layout-container
      > .view-components
      > .single-component
      > .single_component_content,
    .view-area >.layout-container> .view-components > .layout-component {
      padding-left: calc(
        (100vw - #{$openEditerW} - #{$edit-layout-padding}) / 12
      );
      padding-right: calc(
        (100vw - #{$openEditerW} - #{$edit-layout-padding}) / 12
      );
    }
    .view-mainArea.background .parts-contents {
      padding-left: calc(
        (100vw - (#{$openEditerW} + #{$edit-layout-padding})) / 12
      );
      padding-right: calc(
        (100vw - (#{$openEditerW} + #{$edit-layout-padding})) / 12
      );
    }
  }
}
.view-components:not(.preview) .component a{
  pointer-events: none;
}